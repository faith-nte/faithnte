---
import Layout from "../../layouts/Layout.astro";
import { getAllPosts, getPostBySlug } from "../../lib/blog";

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const posts = await getAllPosts();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the post from props (passed from getStaticPaths)
const { post } = Astro.props;

if (!post) {
  return Astro.redirect("/404");
}

const formatDate = (date: string) => {
  return new Date(date).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<Layout
  title={`${post.title} - Faithnte Blog`}
  description={post.excerpt}
  image={post.coverImage}
>
  <article class="bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-gray-500">
          <li><a href="/" class="hover:text-blue-600">Home</a></li>
          <li>/</li>
          <li><a href="/blog" class="hover:text-blue-600">Blog</a></li>
          <li>/</li>
          <li class="text-gray-900">{post.title}</li>
        </ol>
      </nav>

      <!-- Article Header -->
      <header class="mb-8">
        {
          post.featured && (
            <span class="inline-block bg-blue-100 text-blue-800 text-sm font-semibold px-3 py-1 rounded-full mb-4">
              Featured Post
            </span>
          )
        }

        <h1
          class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-4"
        >
          {post.title}
        </h1>

        <div class="flex items-center text-gray-600 mb-6">
          <span>By {post.author}</span>
          <span class="mx-2">•</span>
          <time datetime={post.publishedAt}>
            {formatDate(post.publishedAt)}
          </time>
          {
            post.updatedAt !== post.publishedAt && (
              <>
                <span class="mx-2">•</span>
                <span>Updated {formatDate(post.updatedAt)}</span>
              </>
            )
          }
        </div>

        {
          post.tags && post.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-6">
              {post.tags.map((tag) => (
                <a
                  href={`/blog/tags/${tag}`}
                  class="inline-block bg-gray-100 text-gray-700 text-sm px-3 py-1 rounded-full hover:bg-gray-200 transition-colors"
                >
                  #{tag}
                </a>
              ))}
            </div>
          )
        }

        {
          post.coverImage && (
            <div class="mb-8">
              <img
                src={post.coverImage}
                alt={post.title}
                class="w-full h-64 md:h-96 object-cover rounded-lg"
              />
            </div>
          )
        }
      </header>

      <!-- Article Content -->
      <div class="prose prose-lg max-w-none">
        <div class="text-xl text-gray-600 mb-8 italic">
          {post.excerpt}
        </div>

        <div
          class="markdown-content"
          set:html={post.content.replace(/\n/g, "<br />")}
        />
      </div>

      <!-- Article Footer -->
      <footer class="mt-12 pt-8 border-t border-gray-200">
        <div class="text-sm text-gray-500">
          <p>Published on {formatDate(post.publishedAt)}</p>
          {
            post.updatedAt !== post.publishedAt && (
              <p>Last updated on {formatDate(post.updatedAt)}</p>
            )
          }
        </div>
      </footer>

      <!-- Navigation -->
      <nav class="mt-12 pt-8 border-t border-gray-200">
        <div class="flex justify-between">
          <a
            href="/blog"
            class="inline-flex items-center text-blue-600 hover:text-blue-700"
          >
            <svg
              class="mr-1 w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to Blog
          </a>
        </div>
      </nav>
    </div>
  </article>
</Layout>

<style>
  .markdown-content h1,
  .markdown-content h2,
  .markdown-content h3,
  .markdown-content h4,
  .markdown-content h5,
  .markdown-content h6 {
    @apply font-bold text-gray-900 mt-8 mb-4;
  }

  .markdown-content h1 {
    @apply text-3xl;
  }
  .markdown-content h2 {
    @apply text-2xl;
  }
  .markdown-content h3 {
    @apply text-xl;
  }
  .markdown-content h4 {
    @apply text-lg;
  }

  .markdown-content p {
    @apply mb-4 text-gray-700 leading-relaxed;
  }

  .markdown-content ul,
  .markdown-content ol {
    @apply mb-4 pl-6;
  }

  .markdown-content li {
    @apply mb-2;
  }

  .markdown-content code {
    @apply bg-gray-100 px-2 py-1 rounded text-sm font-mono;
  }

  .markdown-content blockquote {
    @apply border-l-4 border-blue-500 pl-4 italic text-gray-600 my-6;
  }
</style>
